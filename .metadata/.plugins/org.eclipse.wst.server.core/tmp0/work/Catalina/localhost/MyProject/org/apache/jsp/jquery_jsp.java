/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2018-11-29 04:45:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class jquery_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/struts2-core-2.3.36.jar", Long.valueOf(1541049519481L));
    _jspx_dependants.put("jar:file:/C:/Users/internousdev/Desktop/workspace/workspace-suzuki/test/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/MyProject/WEB-INF/lib/struts2-core-2.3.36.jar!/META-INF/struts-tags.tld", Long.valueOf(1537588232000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/style01.css\">\r\n");
      out.write("<!-- bxslider -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/bxslider/4.2.12/jquery.bxslider.css\">\r\n");
      out.write("<!--   上へ戻るボタン -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css\">\r\n");
      out.write("\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/bxslider/4.2.12/jquery.bxslider.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- elevateZoom -->\r\n");
      out.write("  <script type=\"text/javascript\" src=\"./javascript/jquery.elevatezoom.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<title>jQuery</title>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("/* #main { */\r\n");
      out.write("/* \ttext-align:center; */\r\n");
      out.write("/* \t} */\r\n");
      out.write("\r\n");
      out.write("/* ---------------- アコーディオン内 ----------------- */\r\n");
      out.write(".accordion dt {\r\n");
      out.write("color: teal;\r\n");
      out.write("text-align: left;\r\n");
      out.write("cursor: pointer;\r\n");
      out.write("/* これが有効だとクリック範囲が横幅いっぱいになる */\r\n");
      out.write("}\r\n");
      out.write(".accordion dd {\r\n");
      out.write("display: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".accordion_2 dt {\r\n");
      out.write("text-align: center;\r\n");
      out.write("color: white;\r\n");
      out.write("border-bottom: 1px white solid;\r\n");
      out.write("cursor: pointer;\r\n");
      out.write("background-color: lightseagreen;\r\n");
      out.write("width: 500px;\r\n");
      out.write("height: 50px;\r\n");
      out.write("line-height: 50px;\r\n");
      out.write("}\r\n");
      out.write(".accordion_2 dd {\r\n");
      out.write("display: none;\r\n");
      out.write("/* これが最初にないとページリロードで開きっぱなし */\r\n");
      out.write("text-align: center;\r\n");
      out.write("color: lightseagreen;\r\n");
      out.write("border-bottom: 1px lightseagreen solid;\r\n");
      out.write("cursor: pointer;\r\n");
      out.write("background-color: paleturquoise;\r\n");
      out.write("width: 100%;\r\n");
      out.write("height: 50px;\r\n");
      out.write("line-height: 50px;\r\n");
      out.write("}\r\n");
      out.write("/* dt { */\r\n");
      out.write("/* cursor: pointer; */\r\n");
      out.write("/* } */\r\n");
      out.write("/* dd { */\r\n");
      out.write("/* display: none */\r\n");
      out.write("/* } */\r\n");
      out.write("\r\n");
      out.write("/* ======== CSS によるアコーディオン =============== */\r\n");
      out.write("/* reset */\r\n");
      out.write(".accordion_css > button {\r\n");
      out.write("backgraund: transparent;\r\n");
      out.write("border: none;\r\n");
      out.write("cursor: pointer;\r\n");
      out.write("outline: none;\r\n");
      out.write("padding: 0;\r\n");
      out.write("appearance: none;\r\n");
      out.write("}\r\n");
      out.write(".accordion_css > ul {\r\n");
      out.write("list-style-type: none;\r\n");
      out.write("margin: 0;\r\n");
      out.write("padding: 0;\r\n");
      out.write("color: black;\r\n");
      out.write("}\r\n");
      out.write(".accordion_css > li.p {\r\n");
      out.write("margin: 0;\r\n");
      out.write("}\r\n");
      out.write("/* reset */\r\n");
      out.write("\r\n");
      out.write(".accordion_css > button {\r\n");
      out.write("display: block;\r\n");
      out.write("cursor: pointer;\r\n");
      out.write("background-color: darkturquoise;\r\n");
      out.write("text-align: center;\r\n");
      out.write("width: 300px;\r\n");
      out.write("height: 50px;\r\n");
      out.write("line-height: 50px;\r\n");
      out.write("}\r\n");
      out.write(".accordion_css > ul > li {\r\n");
      out.write("background-color:paleturquoise;\r\n");
      out.write("text-align: center;\r\n");
      out.write("width: 300px;\r\n");
      out.write("/* 閉じた状態 */\r\n");
      out.write("border-top: 1px white solid;\r\n");
      out.write("padding-top: 13px;\r\n");
      out.write("padding-bottom: 13px;\r\n");
      out.write("}\r\n");
      out.write("/* .accordion_css > ul.is-open > li { */\r\n");
      out.write("/* /* 開いた状態 */ */\r\n");
      out.write("/* border-top: 1px white solid; */\r\n");
      out.write("/* padding-top: 13px; */\r\n");
      out.write("/* padding-bottom: 13px; */\r\n");
      out.write("/* } */\r\n");
      out.write(".accordion_css > ul > li > p {\r\n");
      out.write("/* 閉じた状態 */\r\n");
      out.write("line-height: 1.5;\r\n");
      out.write("/* opacity: 0; */\r\n");
      out.write("/* visibility: hidden; */\r\n");
      out.write("}\r\n");
      out.write("/* .accordion_css > ul.is-open > li > p { */\r\n");
      out.write("/* /* 開いた状態 */ */\r\n");
      out.write("/* line-height: 1.5; */\r\n");
      out.write("/* opacity: 1; */\r\n");
      out.write("/* visibility: visible; */\r\n");
      out.write("/* } */\r\n");
      out.write("\r\n");
      out.write("/* ======== CSS によるアコーディオン =============== */\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<!-- ======= javascript(jQuery) =================================== -->\r\n");
      out.write("  <script>\r\n");
      out.write("    $(document).ready(function(){\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("      $('.bxslider').bxSlider({\r\n");
      out.write("    \t  auto: true,\r\n");
      out.write("    \t  mode: 'fade',\r\n");
      out.write("    \t  speed: 1000,\r\n");
      out.write("    \t  slideWidth: 400\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("      $('.accordion dt').click(function(){\r\n");
      out.write("    \t  $(this).toggleClass('open');\r\n");
      out.write("    \t  $(this).next().slideToggle();\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      $('.accordion_2 dt').click(function(){\r\n");
      out.write("    \t  $(this).next('dd').slideToggle();\r\n");
      out.write("    \t  $(this).next('dd').siblings('dd').slideUp();\r\n");
      out.write("    \t  $(this).togglClass('open');\r\n");
      out.write("    \t  $(this).siblings('dt').removeClass('open');\r\n");
      out.write("          });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("      $('#zoom').elevateZoom({\r\n");
      out.write("//     \t  option\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      $('#zoom2').elevateZoom({\r\n");
      out.write("//     \t  option\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    });\r\n");
      out.write("  </script>\r\n");
      out.write("  <!-- ======= jQuery =================================== -->\r\n");
      out.write("<!-- bxslider -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- スクリプトファイル指定 -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"./javascript/script.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- ============== ココカラ =============== -->\r\n");
      out.write("\r\n");
      out.write("<!-- ==== header ===== -->\r\n");
      out.write("<header>\r\n");
      out.write("\r\n");
      out.write("<div id=\"logo\">ＭｙＰｒｏｊｅｃｔ</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"menu\">\r\n");
      out.write("\r\n");
      out.write("<ul>\r\n");
      out.write("   <li>ＴＯＰ</li>\r\n");
      out.write("   <li>menuＡ</li>\r\n");
      out.write("   <li>menuＢ</li>\r\n");
      out.write("   <li>menuＣ</li>\r\n");
      out.write("</ul>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("<!-- ==== main ===== -->\r\n");
      out.write("\r\n");
      out.write("<div id=\"main\">\r\n");
      out.write("<div id=\"main-container\">\r\n");
      out.write("\r\n");
      out.write("<p class=\"name\">■ 文字に対するイベント</p>\r\n");
      out.write("\r\n");
      out.write("<h1>\r\n");
      out.write("Click Here !\r\n");
      out.write("<br>\r\n");
      out.write("</h1>\r\n");
      out.write("\r\n");
      out.write("<div class=\"samp1\">\r\n");
      out.write("sample   #samp1\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("<div class=\"samp2\">\r\n");
      out.write("sample   #samp1 #samp2\r\n");
      out.write("<br>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("sample\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"samp2\">\r\n");
      out.write("sample  #samp2\r\n");
      out.write("</div>\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("sample\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<p class=\"name\">■ 画像に対するイベント</p>\r\n");
      out.write("\r\n");
      out.write("<div class=\"img\">\r\n");
      out.write("\r\n");
      out.write("<div class=\"click_img\">\r\n");
      out.write("<img src=\"./img/bookstore.jpg\" width=\"400px\">\r\n");
      out.write("<!-- width=400px で下4枚と同じサイズ -->\r\n");
      out.write("</div>\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("<div class=\"4imgs\">\r\n");
      out.write("<img src=\"./img/pic1.jpg\">\r\n");
      out.write("<img src=\"./img/pic4.jpg\">\r\n");
      out.write("<img src=\"./img/pic6.jpg\">\r\n");
      out.write("<img src=\"./img/pic8.jpg\">\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("<p class=\"name\">■ スライドショー</p>\r\n");
      out.write("   bxslider を使用<br>\r\n");
      out.write("\r\n");
      out.write("  <div class=\"bxslider\">\r\n");
      out.write("    <img src=\"./img/jQuery_image1.jpg\">\r\n");
      out.write("    <img src=\"./img/jQuery_image2.jpg\">\r\n");
      out.write("    <img src=\"./img/jQuery_image3.jpg\">\r\n");
      out.write("    <img src=\"./img/jQuery_image4.jpg\">\r\n");
      out.write("    <img src=\"./img/jQuery_image5.jpg\">\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("  <p class=\"name\">■ アコーディオン</p>\r\n");
      out.write("  jQuery を使用<br>\r\n");
      out.write("  ① 開きっぱなし\r\n");
      out.write("  <br>\r\n");
      out.write("  <dl class=\"accordion\">\r\n");
      out.write("    <dt>click here!</dt>\r\n");
      out.write("      <dd>Menu 01 contents...</dd>\r\n");
      out.write("    <dt>click here!!</dt>\r\n");
      out.write("      <dd>Menu 02 contents...</dd>\r\n");
      out.write("    <dt>click here!!!</dt>\r\n");
      out.write("      <dd>Menu 03 contents...</dd>\r\n");
      out.write("  </dl>\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("  ② ひとつしか開かない\r\n");
      out.write("<br>\r\n");
      out.write("<dl class=\"accordion_2\">\r\n");
      out.write("    <dt>Menu 01</dt>\r\n");
      out.write("      <dd>Menu 01 contents...</dd>\r\n");
      out.write("    <dt>Menu 02</dt>\r\n");
      out.write("      <dd>Menu 02 contents...</dd>\r\n");
      out.write("    <dt>Menu 03</dt>\r\n");
      out.write("      <dd>Menu 03 contents...</dd>\r\n");
      out.write("  </dl>\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("<p>jQuery を使わないでCSS のみでアコーディオン</p>\r\n");
      out.write("<p> js が動かないのでこの先に進めない<br>\r\n");
      out.write("<a href=\"https://liginc.co.jp/356926\">https://liginc.co.jp/356926</a></p>\r\n");
      out.write("\r\n");
      out.write("<div class=\"accordion_css\">\r\n");
      out.write("<button>CLICK</button>\r\n");
      out.write("<ul>\r\n");
      out.write("    <li>\r\n");
      out.write("    <p>1つめの項目</p>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li>\r\n");
      out.write("    <p>2つめの項目</p>\r\n");
      out.write("    <p>他の項目より高さがある</p>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li>\r\n");
      out.write("    <p>3つめの項目</p>\r\n");
      out.write("    </li>\r\n");
      out.write("</ul>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<p class=\"name\">■ 画像ズーム</p>\r\n");
      out.write("<p>elevateZoom を使用</p>\r\n");
      out.write("\r\n");
      out.write("<img id=\"zoom\" src=\"./img/pic5.jpg\" data-zoom-img=\"./img/pic5.jpg\" width=\"150\"/>\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("<img id=\"zoom2\" src=\"./img/bookstore.jpg\" data-zoom-img=\"./img/bookstore.jpg\" width=\"250\"/>\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<a href='jquery.jsp'>pageRenew</a><br>\r\n");
      out.write("<br>\r\n");
      out.write("<a href='index.jsp'>goToHome</a>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 上へ戻るボタン -->\r\n");
      out.write("    <p id=\"pageTop\"><a href=\"#\"><i class=\"fa fa-chevron-up \"></i></a></p>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- ======================= ココマデ ===================================== -->\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- ==== footer ===== -->\r\n");
      out.write("<footer>\r\n");
      out.write("<p>This page is written by MoeSuzuki   @ Nov. 2018 .</p>\r\n");
      out.write("</footer>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
